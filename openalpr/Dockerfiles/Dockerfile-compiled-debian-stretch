FROM debian:stretch-slim AS builder

###############
# opencv ######
###############

RUN apt-get update

ENV TZ=Americas/Los_Angeles
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata

RUN apt-get install --assume-yes apt-utils wget build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev curl
# TODO: investigate gstreamer: https://groups.google.com/g/openalpr/c/BWjjVMRh_rI/m/SYmgBMEgBwAJ

RUN curl -o 3.4.1.tar.gz https://codeload.github.com/opencv/opencv/tar.gz/3.4.1
RUN tar -xf 3.4.1.tar.gz
WORKDIR opencv-3.4.1
RUN mkdir release
WORKDIR release
RUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..
RUN make -j "$(nproc)" VERBOSE=1
RUN make install
RUN rm -r /opencv-3.4.1

###############
# leptonica ###
###############

WORKDIR /
#RUN curl -o leptonica-1.76.0.tar.gz https://codeload.github.com/DanBloomberg/leptonica/tar.gz/refs/tags/1.76.0
RUN wget https://github.com/DanBloomberg/leptonica/releases/download/1.76.0/leptonica-1.76.0.tar.gz

RUN tar -xf leptonica-1.76.0.tar.gz
WORKDIR leptonica-1.76.0
RUN ./configure --prefix=/usr/local
RUN make -j "$(nproc)" && make install

###############
# tesseract ###
###############

RUN apt-get install --assume-yes \
  autoconf automake libtool \
  autoconf-archive pkg-config \
  libpng-dev libtiff5-dev zlib1g-dev

WORKDIR /
RUN curl -o 3.05.00.tar.gz https://codeload.github.com/tesseract-ocr/tesseract/tar.gz/3.05.00
# RUN wget -q https://github.com/tesseract-ocr/tesseract/archive/3.05.00.tar.gz
RUN tar -xf 3.05.00.tar.gz
WORKDIR tesseract-3.05.00
#RUN wget -q https://github.com/tesseract-ocr/tessdata/raw/3.04.00/eng.traineddata
#RUN mv eng.traineddata tessdata/.

ENV LD_LIBRARY_PATH=/usr/local/lib

RUN ./autogen.sh
RUN ./configure
RUN make -j "$(nproc)" && make install
RUN ldconfig

###############
# openALPR ###
###############

RUN apt-get update && apt-get install --assume-yes \
  liblog4cplus-dev \
  beanstalkd \
  libcurl4-openssl-dev \
  wget build-essential cmake



# Necessary for java bindings:
#RUN apt-get update && apt-get install --assume-yes \
#  openjdk-8-jdk
#ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-armhf

WORKDIR /
RUN wget -q https://github.com/openalpr/openalpr/archive/v2.3.0.tar.gz
RUN tar -xf v2.3.0.tar.gz
WORKDIR openalpr-2.3.0
RUN echo "SET(OpenCV_DIR \"/usr/local/lib\")" >> src/CMakeLists.txt
RUN echo "SET(Tesseract_DIR \"/tesseract-ocr\")" >> src/CMakeLists.txt
RUN echo "set(CMAKE_CXX_STANDARD 11)" | cat - src/CMakeLists.txt > CMakeLists.txt.tmp && mv CMakeLists.txt.tmp src/CMakeLists.txt
RUN echo "set(CMAKE_CXX_STANDARD_REQUIRED ON)" | cat - src/CMakeLists.txt > CMakeLists.txt.tmp && mv CMakeLists.txt.tmp src/CMakeLists.txt
RUN echo "set(CMAKE_CXX_EXTENSIONS OFF)" | cat - src/CMakeLists.txt > CMakeLists.txt.tmp && mv CMakeLists.txt.tmp src/CMakeLists.txt

WORKDIR /openalpr-2.3.0/src
RUN cmake ./
RUN make -j "$(nproc)"
RUN make install

FROM debian:stretch-slim
COPY --from=builder /usr/local /usr/local
COPY --from=builder /usr/include /usr/include
COPY --from=builder /usr/bin/beanstalkd /usr/bin/beanstalkd
COPY --from=builder /etc/openalpr /etc/openalpr

# https://stackoverflow.com/questions/56793592/is-this-a-good-approach-for-developing-a-multi-layered-c-c-application-using-d
RUN ldconfig -v

RUN apt-get update && apt-get install -y \
procps \
curl \
liblog4cplus-dev \
libpng-dev \
libjpeg-dev \
libtiff-dev \
libgtk2.0-dev \
libdc1394-22-dev \
libavcodec-dev \
libavformat-dev \
libswscale-dev

RUN touch /var/log/alprd.log

WORKDIR /
COPY entrypoint.sh /entrypoint.sh

CMD sh entrypoint.sh